{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAddMovie","useState","setQuery","setMovie","hasLoadingError","setHasLoadingError","a","newMovie","Title","Plot","imdbID","Poster","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","preventDefault","findMovie","undefined","App","setMovies","find","isTheSameMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5793656b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(\n  ({ movie }) => (\n    <>\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          { movie.description }\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </>\n  ),\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <ul className=\"movies\">\n    {movies.map(movie => (\n      <li\n        className=\"card\"\n        data-cy=\"movieCard\"\n        key={movie.imdbId}\n      >\n        <MovieCard movie={movie} />\n      </li>\n    ))}\n  </ul>\n);\n","import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=852d7b42';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport function isTheSameMovie(movies: Movie[], newMovie: Movie) {\n  if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n    return true;\n  }\n\n  return false;\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAddMovie: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  async function findMovie() {\n    setHasLoadingError(false);\n    const newMovie = await getMovie(query);\n\n    if ('Error' in newMovie) {\n      setHasLoadingError(true);\n    } else {\n      setMovie({\n        title: newMovie.Title,\n        description: newMovie.Plot,\n        imdbId: newMovie.imdbID,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n        imgUrl: newMovie.Poster,\n      });\n    }\n  }\n\n  function handleFindMovie(\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) {\n    event.preventDefault();\n    findMovie();\n  }\n\n  function addMovie() {\n    setHasLoadingError(false);\n\n    if (movie) {\n      onAddMovie(movie);\n    }\n\n    setQuery('');\n    setMovie(undefined);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          {hasLoadingError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { isTheSameMovie } from './api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie): void => {\n    if (isTheSameMovie(movies, newMovie)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}